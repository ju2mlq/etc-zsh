#!/usr/bin/env zsh

bindkey -e

source ~/.zplug/zplug/init.zsh

zplug "ju2mlq/704cd2b79adbc994e13c3ca7d64e1cd4", from:gist
zplug "yuki-ycino/tmk", as:command
zplug "yuki-ycino/tms", as:command

zplug check || zplug install

zplug load --verbose

#setopt
setopt appendhistory
setopt noflowcontrol 
setopt nolistbeep
setopt autocd
setopt autopushd
setopt extendedglob
setopt noclobber
#setopt nounset
setopt numericglobsort
setopt pushdminus
setopt pushdsilent
setopt pushdtohome
setopt extendedhistory
setopt sharehistory
setopt ignoreeof

## print to screen's status line
set LAST_CMD
preexec () {
    if [[ "$TERM" == "screen" ]]; then
        ## This code means
        ## w of (wr) .. to slice every words (separated spaces)
        ## r of (wr) .. make array index (1,2,3,4,..., something like that)
        ## ^ .. negate regex.
        ## So, the total command means:
        ## return the 1st word which does not match "*=*(like env), -*(like option), sudo, ..., or ssh"
        LAST_CMD=${1[(wr)^(*=*|-*|sudo|slogin|rlogin|ssh)]}

        ## To avoid over writing of hostname, logging in new host by screen command. 
        ## and writing the hostname in the parent window name by screen command.
        if [[ $LAST_CMD != "screen" && $LAST_CMD != "fg" ]]; then
            echo -ne "\ek${LAST_CMD}(R)\e\\"
        elif [[ $LAST_CMD != "fg" ]]; then
            echo -ne "\ek`hostname -s`\e\\"
        fi

    fi
}

precmd () {
	if [[ "$TERM" == "screen" && ${LAST_CMD:=zsh} != "zsh" && $LAST_CMD != "fg" ]]; then
		echo -ne "\ek(D)${LAST_CMD}\e\\"
	fi
}

function f() {
  local dir repository session current_session
  dir=$(ghq root)/$(ghq list | fzf --prompt='Project >')

  if [[ $dir != "$(ghq root)/" ]]; then
    if [[ ! -z ${TMUX} ]]; then
      repository=${dir##*/}
      session=${repository//./-}
      current_session=$(tmux list-sessions | grep 'attached' | cut -d":" -f1)

      if [[ $current_session =~ ^[0-9]+$ ]]; then
        cd $dir
        tmux rename-session $session
      else
        tmux list-sessions | cut -d":" -f1 | grep $session > /dev/null
        if [[ $? != 0 ]]; then
          tmux new-session -d -c $dir -s $session
        fi
        tmux switch-client -t $session
      fi
    else
      cd $dir
    fi
  fi
}

## original func completion
if [[ -d $HOME/.zsh/functions ]]; then
	fpath=( $fpath $HOME/.zsh/functions )
fi

## default complete 
autoload -U compinit
compinit -u

## keybind (emacs like)
# bindkey -e

## global alias
alias -g G='|grep'
alias -g H='|head'
alias -g L="|${PAGER}"
alias -g N='2> /dev/null'
alias -g T='|tail'

## alias
alias ls='ls -F --color=tty'
alias l='ls -l'
alias h='history'
alias gd='dirs -v; echo "select number: " ; read newdir; cd -"$newdir"'
# alias warp='dirs -v;echo "setnumber:";read num;cd ~-$num'
alias vi='nvim'
alias vim='nvim'
alias tmux='tmux -2'

[[ -e ${HOME}/.dircolors ]] && eval $(dircolors ~/.dircolors/dircolors.ansi-light)

[[ ! -z ${RANGER_LEVEL} ]] && export PROMPT="${PROMPT}(in ranger) "

if [ -x $(which fzf) ]; then
  export FZF_DEFAULT_COMMAND='rg --files --hidden --follow --glob "!.git/*"'
  export FZF_FIND_FILE_COMMAND=${FZF_DEFAULT_COMMAND}
  [[ -e "/usr/share/fzf/completion.zsh" ]] && source "/usr/share/fzf/completion.zsh"
  [[ -e "/usr/share/fzf/key-bindings.zsh" ]] && source "/usr/share/fzf/key-bindings.zsh"
  if [[ "${TERM}" == "screen-256color" ]]; then
    export FZF_TMUX=1
    FZF_TMUX_HEIGHT="60%"
  fi
fi


## END OF COMMON SETTINGS ##

[[ -f $HOME/.zshrc.$(hostname) ]] && source $HOME/.zshrc.$(hostname)

[[ ! -z "${RANGER_LEVEL}" ]] && export PROMPT="${PROMPT}(in ranger) "

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
